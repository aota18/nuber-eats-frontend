[{"/Users/danielseo/Dev/nuber-eats-frontend/src/constants.ts":"1","/Users/danielseo/Dev/nuber-eats-frontend/src/pages/login.tsx":"2","/Users/danielseo/Dev/nuber-eats-frontend/src/apollo.ts":"3","/Users/danielseo/Dev/nuber-eats-frontend/src/routers/logged-in-router.tsx":"4","/Users/danielseo/Dev/nuber-eats-frontend/src/index.tsx":"5","/Users/danielseo/Dev/nuber-eats-frontend/src/reportWebVitals.ts":"6","/Users/danielseo/Dev/nuber-eats-frontend/src/routers/logged-out-router.tsx":"7","/Users/danielseo/Dev/nuber-eats-frontend/src/pages/create-account.tsx":"8","/Users/danielseo/Dev/nuber-eats-frontend/src/App.tsx":"9","/Users/danielseo/Dev/nuber-eats-frontend/src/pages/404.tsx":"10","/Users/danielseo/Dev/nuber-eats-frontend/src/components/header.tsx":"11","/Users/danielseo/Dev/nuber-eats-frontend/src/pages/user/confirm-email.tsx":"12","/Users/danielseo/Dev/nuber-eats-frontend/src/pages/user/edit-profile.tsx":"13","/Users/danielseo/Dev/nuber-eats-frontend/src/pages/client/restaurants.tsx":"14","/Users/danielseo/Dev/nuber-eats-frontend/src/components/form-error.tsx":"15","/Users/danielseo/Dev/nuber-eats-frontend/src/components/restaurant.tsx":"16","/Users/danielseo/Dev/nuber-eats-frontend/src/pages/client/search.tsx":"17","/Users/danielseo/Dev/nuber-eats-frontend/src/fragments.ts":"18","/Users/danielseo/Dev/nuber-eats-frontend/src/pages/client/category.tsx":"19","/Users/danielseo/Dev/nuber-eats-frontend/src/__generated__/globalTypes.ts":"20","/Users/danielseo/Dev/nuber-eats-frontend/src/pages/client/restaurant.tsx":"21"},{"size":42,"mtime":1609479723837,"results":"22","hashOfConfig":"23"},{"size":4240,"mtime":1609483287920,"results":"24","hashOfConfig":"23"},{"size":1149,"mtime":1609500352234,"results":"25","hashOfConfig":"23"},{"size":1968,"mtime":1609747682022,"results":"26","hashOfConfig":"23"},{"size":652,"mtime":1609391741771,"results":"27","hashOfConfig":"23"},{"size":425,"mtime":1609387734542,"results":"28","hashOfConfig":"23"},{"size":681,"mtime":1609483014567,"results":"29","hashOfConfig":"23"},{"size":4789,"mtime":1609483277789,"results":"30","hashOfConfig":"23"},{"size":415,"mtime":1609394495479,"results":"31","hashOfConfig":"23"},{"size":617,"mtime":1609569385197,"results":"32","hashOfConfig":"23"},{"size":1083,"mtime":1609505601114,"results":"33","hashOfConfig":"23"},{"size":2003,"mtime":1609584551045,"results":"34","hashOfConfig":"23"},{"size":3180,"mtime":1609569465077,"results":"35","hashOfConfig":"23"},{"size":4674,"mtime":1609589204007,"results":"36","hashOfConfig":"23"},{"size":252,"mtime":1609407446957,"results":"37","hashOfConfig":"23"},{"size":815,"mtime":1609747743284,"results":"38","hashOfConfig":"23"},{"size":846,"mtime":1609585477152,"results":"39","hashOfConfig":"23"},{"size":422,"mtime":1609589173211,"results":"40","hashOfConfig":"23"},{"size":1154,"mtime":1609589737001,"results":"41","hashOfConfig":"23"},{"size":1077,"mtime":1609748050851,"results":"42","hashOfConfig":"23"},{"size":1601,"mtime":1609748873095,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rhizo0",{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/danielseo/Dev/nuber-eats-frontend/src/constants.ts",[],"/Users/danielseo/Dev/nuber-eats-frontend/src/pages/login.tsx",["93","94","95","96","97","98"],"import { ApolloError, gql, useMutation } from '@apollo/client';\nimport React from 'react'\nimport { useForm } from 'react-hook-form'\nimport nuberLogo from '../images/logo.svg'\nimport { FormError } from '../components/form-error';\nimport { loginMutation, loginMutationVariables } from '../__generated__/loginMutation';\nimport { Button } from '../components/button';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { authToken, isLoggedInVar } from '../apollo';\nimport { LOCALSTORAGE_TOKEN } from '../constants';\n\n\nconst LOGIN_MUTATION = gql`\n    mutation loginMutation($loginInput: LoginInput!) {\n        login(input: $loginInput) {\n            ok\n            token\n            error\n        }\n    }\n`\ninterface ILoginForm {\n    email: string;\n    password: string;\n    resultError?: string;\n}\n\n\nexport default function Login() {\n\n    const {register, getValues, watch, errors, handleSubmit, formState} = useForm<ILoginForm>({\n        mode:  \"onChange\"\n    });\n\n    const onCompleted = (data: loginMutation) => {\n        const { login: {error, ok, token}} = data;\n\n        if(ok && token){\n            localStorage.setItem(LOCALSTORAGE_TOKEN, token);\n            authToken(token);\n            isLoggedInVar(true);\n        }\n    }\n\n    const onError = (error: ApolloError) => {\n\n    }\n\n    const [loginMutation, {data: loginMutationResult, loading}] = useMutation<\n        loginMutation, \n        loginMutationVariables\n    >(LOGIN_MUTATION, {\n        onCompleted,\n        onError\n    });\n\n    const onSubmit =() => {\n        if(!loading){\n            const {email, password} = getValues();\n            loginMutation({\n                variables: {\n                    loginInput: {\n                        email,\n                        password,\n                    }\n                }\n            })\n        }\n        \n    }\n\n    const onValid = () => {\n\n    }\n\n    return (\n        <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28 \">\n            <Helmet>\n                <title> Login | Nuber Eats</title>\n            </Helmet>\n            <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\n                <img src={nuberLogo} className=\"w-52 mb-10\" />\n                <h4 className=\"w-full font-medium text-left text-3xl\">Welcome back</h4>\n                <form className=\"grid gap-3 mt-5  w-full\" onSubmit ={handleSubmit(onSubmit)}>\n                    <input \n                        ref={register({ \n                            required: \"Email is required\",\n                            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                        })} \n                        placeholder=\"Email\" \n                        name=\"email\"\n                        type=\"email\"\n                        className=\"input mb-3\"\n                    />\n                    {errors.email?.message && \n                        <FormError errorMessage={errors.email?.message} />\n                    }\n                    {errors.email?.type === 'pattern' && \n                        <FormError errorMessage={\"Please enter a valid email\"} />\n                    }\n                    <input \n                        ref={register({ \n                            required: \"Password is required\",\n      \n                        })} \n                        placeholder=\"Password\" \n                        name=\"password\"\n                        type=\"password\"\n                        className=\"input\" \n                    />\n                    {errors.password?.message && \n                        <FormError errorMessage={errors.password?.message} />\n                    }\n                  \n                    <Button canClick={formState.isValid} loading={loading} actionText={\"Login\"}/>\n                    {loginMutationResult?.login.error && <FormError errorMessage={loginMutationResult.login.error} />}\n                </form>\n\n            <div className=\"mt-4 font-light\">\n                New to Nuber? <Link to=\"/create-account\" className=\"link\"> Create an Account</Link>\n            </div>\n                </div>\n        </div>\n    )\n}\n",["99","100"],"/Users/danielseo/Dev/nuber-eats-frontend/src/apollo.ts",[],"/Users/danielseo/Dev/nuber-eats-frontend/src/routers/logged-in-router.tsx",["101","102","103","104"],"/Users/danielseo/Dev/nuber-eats-frontend/src/index.tsx",[],"/Users/danielseo/Dev/nuber-eats-frontend/src/reportWebVitals.ts",[],["105","106"],"/Users/danielseo/Dev/nuber-eats-frontend/src/routers/logged-out-router.tsx",[],"/Users/danielseo/Dev/nuber-eats-frontend/src/pages/create-account.tsx",["107","108","109","110","111","112"],"/Users/danielseo/Dev/nuber-eats-frontend/src/App.tsx",["113","114"],"import { gql, useQuery, useReactiveVar } from '@apollo/client';\nimport React from 'react';\nimport { isLoggedInVar } from './apollo';\nimport { LoggedInRouter } from './routers/logged-in-router';\nimport { LoggedOutRouter } from './routers/logged-out-router';\n\n\nfunction App() {\n  const isLoggedIn = useReactiveVar(isLoggedInVar);\n\n\n  return isLoggedIn? <LoggedInRouter /> : <LoggedOutRouter />\n}\n\nexport default App;\n",["115","116"],"/Users/danielseo/Dev/nuber-eats-frontend/src/pages/404.tsx",[],"/Users/danielseo/Dev/nuber-eats-frontend/src/components/header.tsx",["117"],"import { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMe } from '../hooks/useMe';\nimport nuberLogo from '../images/logo.svg';\n\ninterface IHeaderProps {\n    email: string\n}\nexport const Header: React.FC<IHeaderProps> = () => {\n\n    const {data} = useMe();\n\n    return (\n        <>\n        {!data?.me.verified && (\n            <div className=\"bg-red-500 py-3 px-3 text-center text-sm text-white\">\n                <span>Please verify your email</span>\n            </div>\n        )}\n        <header className=\" py-4\">\n             <div className=\"w-full px-5 xl:px-0 max-w-screen-xl mx-auto flex justify-between items-center\">\n            <img src={nuberLogo} className=\"w-24\" />\n            <span className=\"text-sm\">\n                <Link to=\"/edit-profile\">\n                    <FontAwesomeIcon icon={faUser} className=\"text-xl\"/>\n                </Link>\n            </span>\n             </div>\n        </header>\n        </>\n    )\n}","/Users/danielseo/Dev/nuber-eats-frontend/src/pages/user/confirm-email.tsx",["118","119","120"],"/Users/danielseo/Dev/nuber-eats-frontend/src/pages/user/edit-profile.tsx",["121","122","123","124"],"import { gql, useApolloClient, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '../../components/button';\nimport { useMe } from '../../hooks/useMe';\nimport { editProfile, editProfileVariables } from '../../__generated__/editProfile';\n\n\nconst EDIT_PROFILE_MUTATION = gql`\n    mutation editProfile($input:EditProfileInput!) {\n        editProfile(input: $input){\n            ok\n            error\n        }\n    }\n`\ninterface IFormProps {\n    email?: string;\n    password?: string;\n}\n\n\n\nexport const EditProfile = () => {\n\n    const {data: userData} = useMe();\n\n    const client = useApolloClient();\n\n    const onCompleted = (data: editProfile) => {\n        const {editProfile: {ok}} = data;\n    \n        /* Update Cache */\n        if( ok && userData) {\n            const {me: {email: prevEmail, id}} = userData;\n            const {email: newEmail} = getValues();\n\n            if(prevEmail !== newEmail){\n                client.writeFragment({\n                    id: `User:${id}`,\n                    fragment: gql`\n                     fragment EditedUser on User {\n                         verified\n                         email\n                     }\n                    `,\n                    data: {\n                        email: newEmail,\n                        verified: true,\n                    }\n                })\n            }\n        }    \n    }\n\n    const [editProfile, {loading}] = useMutation<\n        editProfile, \n        editProfileVariables\n    >(EDIT_PROFILE_MUTATION);\n\n    const {register, handleSubmit, getValues, formState} = useForm<IFormProps>({\n        mode: \"onChange\",\n        defaultValues: {\n            email: userData?.me.email,\n            password: \"\"\n        }\n    });\n\n    const onSubmit = () => {\n        const {email, password} = getValues();\n\n        editProfile({\n            variables: {\n                input: {\n                    email,\n                    ...(password !== \"\" && {password})\n                }\n            }\n        })\n    }\n    return <div className=\"mt-52 flex flex-col justify-center items-center\">\n        <Helmet>\n                <title>Confirm Email | Nuber Eats</title>\n            </Helmet>\n        <h4 className=\"font-semibold text-2xl mb-3\">Edit Profile</h4>\n\n        <form className=\"grid max-w-screen-sm gap-3 mt-5 w-full mb-5\" onSubmit={handleSubmit(onSubmit)}>\n            <input\n                ref={register({\n                    pattern:  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                })}\n                name=\"email\" \n                type=\"email\"\n                className=\"input\"\n                placeholder=\"Email\"\n            />\n            <input \n                ref={register}\n                name=\"password\"\n                type=\"password\"\n                className=\"input\"\n                placeholder=\"Password\"\n            />\n            <Button loading={false} canClick={formState.isValid} actionText=\"Save Profile\" />\n        </form>\n    </div>\n}","/Users/danielseo/Dev/nuber-eats-frontend/src/pages/client/restaurants.tsx",[],"/Users/danielseo/Dev/nuber-eats-frontend/src/components/form-error.tsx",[],"/Users/danielseo/Dev/nuber-eats-frontend/src/components/restaurant.tsx",[],"/Users/danielseo/Dev/nuber-eats-frontend/src/pages/client/search.tsx",["125","126","127"],"/Users/danielseo/Dev/nuber-eats-frontend/src/fragments.ts",[],"/Users/danielseo/Dev/nuber-eats-frontend/src/pages/client/category.tsx",["128","129","130"],"/Users/danielseo/Dev/nuber-eats-frontend/src/__generated__/globalTypes.ts",[],"/Users/danielseo/Dev/nuber-eats-frontend/src/pages/client/restaurant.tsx",["131"],{"ruleId":"132","severity":1,"message":"133","line":32,"column":33,"nodeType":"134","messageId":"135","endLine":32,"endColumn":38},{"ruleId":"132","severity":1,"message":"136","line":37,"column":25,"nodeType":"134","messageId":"135","endLine":37,"endColumn":30},{"ruleId":"132","severity":1,"message":"137","line":73,"column":11,"nodeType":"134","messageId":"135","endLine":73,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":83,"column":17,"nodeType":"140","endLine":83,"endColumn":63},{"ruleId":"141","severity":1,"message":"142","line":89,"column":48,"nodeType":"143","messageId":"144","endLine":89,"endColumn":49,"suggestions":"145"},{"ruleId":"141","severity":1,"message":"142","line":89,"column":73,"nodeType":"143","messageId":"144","endLine":89,"endColumn":74,"suggestions":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"132","severity":1,"message":"151","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"152","line":1,"column":15,"nodeType":"134","messageId":"135","endLine":1,"endColumn":23},{"ruleId":"132","severity":1,"message":"153","line":4,"column":34,"nodeType":"134","messageId":"135","endLine":4,"endColumn":42},{"ruleId":"132","severity":1,"message":"154","line":52,"column":11,"nodeType":"134","messageId":"135","endLine":52,"endColumn":18},{"ruleId":"147","replacedBy":"155"},{"ruleId":"149","replacedBy":"156"},{"ruleId":"132","severity":1,"message":"157","line":40,"column":11,"nodeType":"134","messageId":"135","endLine":40,"endColumn":18},{"ruleId":"132","severity":1,"message":"136","line":46,"column":36,"nodeType":"134","messageId":"135","endLine":46,"endColumn":41},{"ruleId":"132","severity":1,"message":"137","line":81,"column":11,"nodeType":"134","messageId":"135","endLine":81,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":92,"column":17,"nodeType":"140","endLine":92,"endColumn":63},{"ruleId":"141","severity":1,"message":"142","line":98,"column":48,"nodeType":"143","messageId":"144","endLine":98,"endColumn":49,"suggestions":"158"},{"ruleId":"141","severity":1,"message":"142","line":98,"column":73,"nodeType":"143","messageId":"144","endLine":98,"endColumn":74,"suggestions":"159"},{"ruleId":"132","severity":1,"message":"151","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"152","line":1,"column":15,"nodeType":"134","messageId":"135","endLine":1,"endColumn":23},{"ruleId":"147","replacedBy":"160"},{"ruleId":"149","replacedBy":"161"},{"ruleId":"138","severity":1,"message":"139","line":24,"column":13,"nodeType":"140","endLine":24,"endColumn":53},{"ruleId":"132","severity":1,"message":"162","line":4,"column":22,"nodeType":"134","messageId":"135","endLine":4,"endColumn":33},{"ruleId":"132","severity":1,"message":"163","line":48,"column":35,"nodeType":"134","messageId":"135","endLine":48,"endColumn":49},{"ruleId":"164","severity":1,"message":"165","line":64,"column":8,"nodeType":"166","endLine":64,"endColumn":10,"suggestions":"167"},{"ruleId":"132","severity":1,"message":"168","line":31,"column":11,"nodeType":"134","messageId":"135","endLine":31,"endColumn":22},{"ruleId":"132","severity":1,"message":"169","line":57,"column":26,"nodeType":"134","messageId":"135","endLine":57,"endColumn":33},{"ruleId":"141","severity":1,"message":"142","line":91,"column":41,"nodeType":"143","messageId":"144","endLine":91,"endColumn":42,"suggestions":"170"},{"ruleId":"141","severity":1,"message":"142","line":91,"column":66,"nodeType":"143","messageId":"144","endLine":91,"endColumn":67,"suggestions":"171"},{"ruleId":"132","severity":1,"message":"172","line":7,"column":7,"nodeType":"134","messageId":"135","endLine":7,"endColumn":24},{"ruleId":"132","severity":1,"message":"173","line":29,"column":16,"nodeType":"134","messageId":"135","endLine":29,"endColumn":17},{"ruleId":"164","severity":1,"message":"174","line":34,"column":8,"nodeType":"166","endLine":34,"endColumn":10,"suggestions":"175"},{"ruleId":"132","severity":1,"message":"176","line":34,"column":18,"nodeType":"134","messageId":"135","endLine":34,"endColumn":25},{"ruleId":"132","severity":1,"message":"177","line":38,"column":12,"nodeType":"134","messageId":"135","endLine":38,"endColumn":16},{"ruleId":"132","severity":1,"message":"169","line":38,"column":18,"nodeType":"134","messageId":"135","endLine":38,"endColumn":25},{"ruleId":"132","severity":1,"message":"169","line":26,"column":18,"nodeType":"134","messageId":"135","endLine":26,"endColumn":25},"@typescript-eslint/no-unused-vars","'watch' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'onValid' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["178","179"],["180","181"],"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"'gql' is defined but never used.","'useQuery' is defined but never used.","'Redirect' is defined but never used.","'onClick' is assigned a value but never used.",["182"],["183"],"'onError' is assigned a value but never used.",["184","185"],["186","187"],["182"],["183"],"'useLocation' is defined but never used.","'verifyingEmail' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.","ArrayExpression",["188"],"'onCompleted' is assigned a value but never used.","'loading' is assigned a value but never used.",["189","190"],["191","192"],"'SEARCH_RESTAURANT' is assigned a value but never used.","'_' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'location.search'. Either include them or remove the dependency array.",["193"],"'setPage' is assigned a value but never used.","'data' is assigned a value but never used.",{"messageId":"194","fix":"195","desc":"196"},{"messageId":"197","fix":"198","desc":"199"},{"messageId":"194","fix":"200","desc":"196"},{"messageId":"197","fix":"201","desc":"199"},"no-global-assign","no-unsafe-negation",{"messageId":"194","fix":"202","desc":"196"},{"messageId":"197","fix":"203","desc":"199"},{"messageId":"194","fix":"204","desc":"196"},{"messageId":"197","fix":"205","desc":"199"},{"desc":"206","fix":"207"},{"messageId":"194","fix":"208","desc":"196"},{"messageId":"197","fix":"209","desc":"199"},{"messageId":"194","fix":"210","desc":"196"},{"messageId":"197","fix":"211","desc":"199"},{"desc":"212","fix":"213"},"removeEscape",{"range":"214","text":"215"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"216","text":"217"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"218","text":"215"},{"range":"219","text":"217"},{"range":"220","text":"215"},{"range":"221","text":"217"},{"range":"222","text":"215"},{"range":"223","text":"217"},"Update the dependencies array to be: [verifyEmail]",{"range":"224","text":"225"},{"range":"226","text":"215"},{"range":"227","text":"217"},{"range":"228","text":"215"},{"range":"229","text":"217"},"Update the dependencies array to be: [history, location.search]",{"range":"230","text":"231"},[2590,2591],"",[2590,2590],"\\",[2615,2616],[2615,2615],[2857,2858],[2857,2857],[2882,2883],[2882,2882],[1614,1616],"[verifyEmail]",[2548,2549],[2548,2548],[2573,2574],[2573,2573],[814,816],"[history, location.search]"]